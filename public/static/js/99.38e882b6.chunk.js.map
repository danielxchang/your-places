{"version":3,"file":"static/js/99.38e882b6.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { Fragment, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport \"./PlaceForm.css\";\n\nconst NewPlace = (props) => {\n  const authCtx = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places`,\n        \"POST\",\n        formData,\n        {\n          Authorization: `Bearer ${authCtx.token}`,\n        }\n      );\n      history.push(\"/\");\n    } catch (err) {}\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          center\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image.\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default NewPlace;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../util/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return { ...state, isTouched: true };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { onInput, id } = props;\n  const { value, isValid, isTouched } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [onInput, id, value, isValid]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({ type: \"TOUCH\" });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={value}\n      />\n    ) : (\n      <textarea\n        id={id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !isValid && isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={id}>{props.label}</label>\n      {element}\n      {!isValid && isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Backdrop from \"./Backdrop\";\nimport \"./Modal.css\";\n\nconst ModalOverlay = (props) => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) continue;\n        if (inputId === action.inputId)\n          formIsValid = formIsValid && action.isValid;\n        else formIsValid = formIsValid && state.inputs[inputId].isValid;\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({ type: \"INPUT_CHANGE\", value, isValid, inputId: id });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortController = new AbortController();\n      activeHttpRequests.current.push(httpAbortController);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortController\n        );\n\n        if (!response.ok) throw new Error(responseData.message);\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["props","authCtx","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useForm","title","value","isValid","description","address","image","formState","inputHandler","history","useHistory","placeSubmitHandler","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","Fragment","onClear","className","onSubmit","asOverlay","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","center","disabled","href","size","inverse","danger","children","to","exact","onClick","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","src","alt","Button","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","body","headers","httpAbortController","AbortController","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}